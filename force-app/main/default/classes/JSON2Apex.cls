//
// Generated by JSON2Apex http://json2apex.herokuapp.com/
//

public class JSON2Apex {

	public class Geo {
		public Double lat {get;set;} 
		public Double lon {get;set;} 

		public Geo(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'lat') {
							lat = parser.getDoubleValue();
						} else if (text == 'lon') {
							lon = parser.getDoubleValue();
						} else {
							System.debug(LoggingLevel.WARN, 'Geo consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public Integer totalResults {get;set;} 
	public Integer page {get;set;} 
	public Integer total_pages {get;set;} 
	public Boolean more_pages {get;set;} 
	public List<Data> data {get;set;} 
	public Integer numResults {get;set;} 

	public JSON2Apex(JSONParser parser) {
		while (parser.nextToken() != System.JSONToken.END_OBJECT) {
			if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
				String text = parser.getText();
				if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
					if (text == 'totalResults') {
						totalResults = parser.getIntegerValue();
					} else if (text == 'page') {
						page = parser.getIntegerValue();
					} else if (text == 'total_pages') {
						total_pages = parser.getIntegerValue();
					} else if (text == 'more_pages') {
						more_pages = parser.getBooleanValue();
					} else if (text == 'data') {
						data = arrayOfData(parser);
					} else if (text == 'numResults') {
						numResults = parser.getIntegerValue();
					} else {
						System.debug(LoggingLevel.WARN, 'JSON2Apex consuming unrecognized property: '+text);
						consumeObject(parser);
					}
				}
			}
		}
	}
	
	public class Address {
		public String city {get;set;} 
		public String state {get;set;} 
		public String postal_code {get;set;} 
		public String street {get;set;} 
		public String formatted {get;set;} 

		public Address(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'city') {
							city = parser.getText();
						} else if (text == 'state') {
							state = parser.getText();
						} else if (text == 'postal_code') {
							postal_code = parser.getText();
						} else if (text == 'street') {
							street = parser.getText();
						} else if (text == 'formatted') {
							formatted = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Address consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Menus {

		public Menus(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						{
							System.debug(LoggingLevel.WARN, 'Menus consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	public class Data {
		public String restaurant_name {get;set;} 
		public String restaurant_phone {get;set;} 
		public String restaurant_website {get;set;} 
		public String hours {get;set;} 
		public String price_range {get;set;} 
		public Integer price_range_num {get;set;} 
		public Long restaurant_id {get;set;} 
		public List<String> cuisines {get;set;} 
		public Address address {get;set;} 
		public Geo geo {get;set;} 
		public List<Menus> menus {get;set;} 
		public String last_updated {get;set;} 

		public Data(JSONParser parser) {
			while (parser.nextToken() != System.JSONToken.END_OBJECT) {
				if (parser.getCurrentToken() == System.JSONToken.FIELD_NAME) {
					String text = parser.getText();
					if (parser.nextToken() != System.JSONToken.VALUE_NULL) {
						if (text == 'restaurant_name') {
							restaurant_name = parser.getText();
						} else if (text == 'restaurant_phone') {
							restaurant_phone = parser.getText();
						} else if (text == 'restaurant_website') {
							restaurant_website = parser.getText();
						} else if (text == 'hours') {
							hours = parser.getText();
						} else if (text == 'price_range') {
							price_range = parser.getText();
						} else if (text == 'price_range_num') {
							price_range_num = parser.getIntegerValue();
						} else if (text == 'restaurant_id') {
							restaurant_id = parser.getLongValue();
						} else if (text == 'cuisines') {
							cuisines = arrayOfString(parser);
						} else if (text == 'address') {
							address = new Address(parser);
						} else if (text == 'geo') {
							geo = new Geo(parser);
						} else if (text == 'menus') {
							menus = arrayOfMenus(parser);
						} else if (text == 'last_updated') {
							last_updated = parser.getText();
						} else {
							System.debug(LoggingLevel.WARN, 'Data consuming unrecognized property: '+text);
							consumeObject(parser);
						}
					}
				}
			}
		}
	}
	
	
	public static JSON2Apex parse(String json) {
		System.JSONParser parser = System.JSON.createParser(json);
		return new JSON2Apex(parser);
	}
	
	public static void consumeObject(System.JSONParser parser) {
		Integer depth = 0;
		do {
			System.JSONToken curr = parser.getCurrentToken();
			if (curr == System.JSONToken.START_OBJECT || 
				curr == System.JSONToken.START_ARRAY) {
				depth++;
			} else if (curr == System.JSONToken.END_OBJECT ||
				curr == System.JSONToken.END_ARRAY) {
				depth--;
			}
		} while (depth > 0 && parser.nextToken() != null);
	}
	



    private static List<Menus> arrayOfMenus(System.JSONParser p) {
        List<Menus> res = new List<Menus>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Menus(p));
        }
        return res;
    }


    private static List<Data> arrayOfData(System.JSONParser p) {
        List<Data> res = new List<Data>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(new Data(p));
        }
        return res;
    }



    private static List<String> arrayOfString(System.JSONParser p) {
        List<String> res = new List<String>();
        if (p.getCurrentToken() == null) p.nextToken();
        while (p.nextToken() != System.JSONToken.END_ARRAY) {
            res.add(p.getText());
        }
        return res;
    }

}